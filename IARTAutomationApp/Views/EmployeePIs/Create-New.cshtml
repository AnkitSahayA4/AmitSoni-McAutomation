@model IARTAutomationApp.Models.EmployeePI

@{
    ViewBag.Title = "Create";

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="content">

        <ol class="breadcrumb bc-colored bg-success m-b-3">
            <li class="breadcrumb-item"><a href="#">Admin-HR</a></li>
            <li class="breadcrumb-item active">Add Employees Personal Information</li>
        </ol>

        <div class="row">
            <div class="col-lg-12">
                <div class="card ">
                    <div class="card-header bg-blue">
                        <h5 class="text-white m-b-0">Add Employee Personal Information</h5>
                    </div>
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!--Row Employee Code-->
                        <h4 class="form-heading-1">Employee Code</h4>
                        <div class="row">

                            <!--Form Field Employee Code-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Employee Code", "Employee Code", htmlAttributes: new { })
                                    @Html.DropDownList("EmployeeCode", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Code-->
                            <!--Form Field Employee Status-->
                            <div class="col-md-6">
                                <div class="form-group"> <!--This field has to be added in to database-->
                                   @* @Html.LabelFor(model => model.EmployeeStatus, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.EmployeeStatus, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeStatus, "", new { @class = "text-danger" }) *@

                                    @Html.Label("Employee Status", htmlAttributes: new { })
                                    @Html.DropDownList("EmployeeStatus", new List<SelectListItem> {
                                        new SelectListItem { Text = "Select Status", Value = "Select Status", Selected=true},
                                        new SelectListItem { Text = "Active", Value = "Active"},
                                        new SelectListItem { Text = "On Leave", Value = "On Leave"},
                                        new SelectListItem { Text = "Retired", Value = "Retired"},
                                        new SelectListItem { Text = "Suspended", Value = "Suspended"}
                                    }, new { @class = "form-control" })
                                </div>
                            </div>
                            <!--EOF Employee Status-->

                        </div>
                        <!--EOF Row Employee Code-->

                        <hr class="m-t-3 m-b-3">

                        <!--Row Personal Info-->
                        <h4 class="form-heading-1">Personal Info</h4>
                        <div class="row">

                            <!--Form Field Employee Email ID-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmpEmailId, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.EmpEmailId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmpEmailId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Email ID-->
                            <!--Form Field Employee Permanent Address-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PermanentAddress, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.PermanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Permanent Address-->
                            <!--Form Field Employee Mobile Number-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Mobile Number-->

                        </div>
                        <!--EOF Row Personal Info-->

                        <hr class="m-t-3 m-b-3">

                        <!--Row Kin Info-->
                        <h4 class="form-heading-1">Kin Info</h4>
                        <div class="row">

                            <!--Form Field Next of Kin Name-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.KinName, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.KinName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.KinName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Next of Kin Name-->
                            <!--Form Field Email of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmailIdKin, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.EmailIdKin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmailIdKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Email of Kin-->
                            <!--Form Field Address of Next of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AddressNextOfKin, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.AddressNextOfKin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AddressNextOfKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Address of Next of Kin-->
                            <!--Form Field State of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StateNextOfKin, htmlAttributes: new { })
                                    @Html.DropDownList("StateNextOfKin", new List<SelectListItem>
        { new SelectListItem  { Text = "Select State", Value = "Select State", Selected=true},
        new SelectListItem  { Text = "Abia", Value = "Abia"},
        new SelectListItem  { Text = "Adamawa", Value = "Adamawa"},
        new SelectListItem  { Text = "Akwa Ibom", Value = "Akwa Ibom"},
        new SelectListItem  { Text = "Anambra", Value = "Anambra"},
        new SelectListItem  { Text = "Bauchi", Value = "Bauchi"},
        new SelectListItem  { Text = "Bayelsa", Value = "Bayelsa"},
        new SelectListItem  { Text = "Benue", Value = "Benue"},
         new SelectListItem  { Text = "Borno", Value = "Borno"},
          new SelectListItem  { Text = "Cross River", Value = "Cross River"},
           new SelectListItem  { Text = "Delta", Value = "Delta"},
            new SelectListItem  { Text = "Edo", Value = "Edo"},
             new SelectListItem  { Text = "Ekiti", Value = "Ekiti"},
              new SelectListItem  { Text = "Enugu", Value = "Enugu"},
           new SelectListItem  { Text = "Gombe", Value = "Gombe"},
             new SelectListItem  { Text = "Imo", Value = "Imo"},
               new SelectListItem  { Text = "Jigawa", Value = "Jigawa"},
                 new SelectListItem  { Text = "Gombe", Value = "Gombe"},
                   new SelectListItem  { Text = "Kaduna", Value = "Kaduna"},
                 new SelectListItem  { Text = "Kano", Value = "Kano"},
                 new SelectListItem  { Text = "Katsina", Value = "Katsina"},
                 new SelectListItem  { Text = "Kebbi", Value = "Kebbi"},
                 new SelectListItem  { Text = "Kogi", Value = "Kogi"},
                 new SelectListItem  { Text = "Kwara", Value = "Kwara"},

                 new SelectListItem  { Text = "Osun", Value = "Osun"},
                 new SelectListItem  { Text = "Oyo", Value = "Oyo"},
                 new SelectListItem  { Text = "Plateau", Value = "Plateau"},
                 new SelectListItem  { Text = "Rivers", Value = "Rivers"},
                 new SelectListItem  { Text = "Sokoto", Value = "Sokoto"},

                   new SelectListItem  { Text = "Lagos", Value = "Lagos"},
                 new SelectListItem  { Text = "Nasarawa", Value = "Nasarawa"},
                 new SelectListItem  { Text = "Niger", Value = "Niger"},
                 new SelectListItem  { Text = "Ogun", Value = "Ogun"},
                 new SelectListItem  { Text = "Ondo", Value = "Ondo"},
                   new SelectListItem  { Text = "Taraba", Value = "Taraba"},
                 new SelectListItem  { Text = "Yobe", Value = "Yobe"},
                 new SelectListItem  { Text = "Zamfara", Value = "Zamfara"},
                 new SelectListItem  { Text = "FCT", Value = "FCT"}


          }, new { @class = "form-control" }
                        )

                                    @Html.ValidationMessageFor(model => model.StateNextOfKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF State of Kin-->
                            <!--Form Field LGA Next of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LGAextOfKin, htmlAttributes: new { })

                                    @Html.DropDownList("LGAextOfKin", new List<SelectListItem>
        { new SelectListItem  { Text = "Select LGA", Value = "Select State", Selected=true},
        new SelectListItem  { Text = "Local", Value = "Local"},
        new SelectListItem  { Text = "Government", Value = "Government"},


          }, new { @class = "form-control" }
                        )
                                    @Html.ValidationMessageFor(model => model.LGAextOfKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF LGA Next of Kin-->
                            <!--Form Field Relation-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Relation, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.Relation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Relation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Relation-->
                            <!--Form Field Phone Number Next of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneNoNextOfKin, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.PhoneNoNextOfKin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNoNextOfKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Phone Number Next of Kin-->

                        </div>
                        <!--EOF Row Kin Info-->

                        <hr class="m-t-3 m-b-3">

                        <!--Row Beneficiary Info-->
                        <h4 class="form-heading-1">Beneficiary Info</h4>
                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NameOfStaffBenificiary, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.NameOfStaffBenificiary, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NameOfStaffBenificiary, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneOfStaffBenificiary, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.PhoneOfStaffBenificiary, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneOfStaffBenificiary, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AddressOfStaffBenificiary, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.AddressOfStaffBenificiary, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AddressOfStaffBenificiary, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            

                        </div>

                        <hr class="m-t-3 m-b-3">

                        <!--Row Beneficiary Info-->
                        <div class="row">

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="button" value="Submit" class="btn btn-success" data-toggle="modal" data-target="#myModal" />
                                </div>
                            </div>

                        </div>
                    
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-ng-show="modal">&times;</button>
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p>Do you want to Save this record</p>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Proceed" class="btn btn-success" data-show="modal" />

                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>
}



